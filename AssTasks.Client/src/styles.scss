// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import 'material-symbols';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@font-face {
    font-family: "Open Sans";
    src: url("/Open_Sans/OpenSans-VariableFont_wdth,wght.ttf") format("opentype");
}

// Define the theme object.
$AssTasks: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$green-palette,
  ),
  typography: (
    brand-family: 'Open Sans',
    regular-weight: 400
  ),
  density: (
    scale: 0,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($AssTasks);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
 @include mat.typography-hierarchy($AssTasks);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($AssTasks.Client-theme);
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

:root {
  --dark: #30343F;
  --primary: #BAF2D8;
  --secondary: #BAD7F2;
  --tertiary: #F2BAC9;
  --other: #F2E2BA;
  // Tasks
  --task-upcoming: #e2f1ff;
  --task-soon: var(--other);
  --task-now: var(--tertiary);
}

.mb-3 {
  margin-bottom: .75rem;
}

.mat-mdc-dialog-title {
  margin-bottom: 0!important;
}
.full-width-input {
  width: 100%;
}
.full-width-input-slider {
  width: calc(100% - 16px)!important;
}

.space-between {
  justify-content: space-between!important;
}